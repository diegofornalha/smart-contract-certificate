{
  "contractName": "TokenMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "faucet",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xde5f72fd"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610887806100206000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461018057806323b872dd146101a7578063313ce567146101d157806339509351146101fc57806370a082311461022057806395d89b4114610241578063a457c2d714610256578063a9059cbb1461027a578063dd62ed3e1461029e578063de5f72fd146102c5575b600080fd5b3480156100ca57600080fd5b506100d36102da565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b5061016c600160a060020a0360043516602435610311565b604080519115158252519081900360200190f35b34801561018c57600080fd5b5061019561038f565b60408051918252519081900360200190f35b3480156101b357600080fd5b5061016c600160a060020a0360043581169060243516604435610395565b3480156101dd57600080fd5b506101e661050a565b6040805160ff9092168252519081900360200190f35b34801561020857600080fd5b5061016c600160a060020a036004351660243561050f565b34801561022c57600080fd5b50610195600160a060020a03600435166105bf565b34801561024d57600080fd5b506100d36105da565b34801561026257600080fd5b5061016c600160a060020a0360043516602435610611565b34801561028657600080fd5b5061016c600160a060020a036004351660243561065c565b3480156102aa57600080fd5b50610195600160a060020a036004358116906024351661073b565b3480156102d157600080fd5b5061016c610766565b60408051808201909152600d81527f476f20426c6f636b636861696e00000000000000000000000000000000000000602082015281565b6000600160a060020a038316151561032857600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152602081905260408120548211156103ba57600080fd5b600160a060020a03841660009081526001602090815260408083203384529091529020548211156103ea57600080fd5b600160a060020a03831615156103ff57600080fd5b600160a060020a038416600090815260208190526040902054610428908363ffffffff61078116565b600160a060020a03808616600090815260208190526040808220939093559085168152205461045d908363ffffffff61079816565b600160a060020a0380851660009081526020818152604080832094909455918716815260018252828120338252909152205461049f908363ffffffff61078116565b600160a060020a03808616600081815260016020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b601281565b6000600160a060020a038316151561052657600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461055a908363ffffffff61079816565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60408051808201909152600381527f4742430000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a038316151561062857600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461055a908363ffffffff61078116565b3360009081526020819052604081205482111561067857600080fd5b600160a060020a038316151561068d57600080fd5b336000908152602081905260409020546106ad908363ffffffff61078116565b3360009081526020819052604080822092909255600160a060020a038516815220546106df908363ffffffff61079816565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600061077b33683635c9adc5dea000006107b1565b50600190565b6000808383111561079157600080fd5b5050900390565b6000828201838110156107aa57600080fd5b9392505050565b600160a060020a03821615156107c657600080fd5b6002546107d9908263ffffffff61079816565b600255600160a060020a038216600090815260208190526040902054610805908263ffffffff61079816565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350505600a165627a7a723058201908f8da568835dd64974c0db93b373f65dc56f7e93e60fb22fc57eaf466efbb0029",
  "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461018057806323b872dd146101a7578063313ce567146101d157806339509351146101fc57806370a082311461022057806395d89b4114610241578063a457c2d714610256578063a9059cbb1461027a578063dd62ed3e1461029e578063de5f72fd146102c5575b600080fd5b3480156100ca57600080fd5b506100d36102da565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b5061016c600160a060020a0360043516602435610311565b604080519115158252519081900360200190f35b34801561018c57600080fd5b5061019561038f565b60408051918252519081900360200190f35b3480156101b357600080fd5b5061016c600160a060020a0360043581169060243516604435610395565b3480156101dd57600080fd5b506101e661050a565b6040805160ff9092168252519081900360200190f35b34801561020857600080fd5b5061016c600160a060020a036004351660243561050f565b34801561022c57600080fd5b50610195600160a060020a03600435166105bf565b34801561024d57600080fd5b506100d36105da565b34801561026257600080fd5b5061016c600160a060020a0360043516602435610611565b34801561028657600080fd5b5061016c600160a060020a036004351660243561065c565b3480156102aa57600080fd5b50610195600160a060020a036004358116906024351661073b565b3480156102d157600080fd5b5061016c610766565b60408051808201909152600d81527f476f20426c6f636b636861696e00000000000000000000000000000000000000602082015281565b6000600160a060020a038316151561032857600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152602081905260408120548211156103ba57600080fd5b600160a060020a03841660009081526001602090815260408083203384529091529020548211156103ea57600080fd5b600160a060020a03831615156103ff57600080fd5b600160a060020a038416600090815260208190526040902054610428908363ffffffff61078116565b600160a060020a03808616600090815260208190526040808220939093559085168152205461045d908363ffffffff61079816565b600160a060020a0380851660009081526020818152604080832094909455918716815260018252828120338252909152205461049f908363ffffffff61078116565b600160a060020a03808616600081815260016020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b601281565b6000600160a060020a038316151561052657600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461055a908363ffffffff61079816565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60408051808201909152600381527f4742430000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a038316151561062857600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461055a908363ffffffff61078116565b3360009081526020819052604081205482111561067857600080fd5b600160a060020a038316151561068d57600080fd5b336000908152602081905260409020546106ad908363ffffffff61078116565b3360009081526020819052604080822092909255600160a060020a038516815220546106df908363ffffffff61079816565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600061077b33683635c9adc5dea000006107b1565b50600190565b6000808383111561079157600080fd5b5050900390565b6000828201838110156107aa57600080fd5b9392505050565b600160a060020a03821615156107c657600080fd5b6002546107d9908263ffffffff61079816565b600255600160a060020a038216600090815260208190526040902054610805908263ffffffff61079816565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350505600a165627a7a723058201908f8da568835dd64974c0db93b373f65dc56f7e93e60fb22fc57eaf466efbb0029",
  "sourceMap": "348:352:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:352:6;;;;;;;",
  "deployedSourceMap": "348:352:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:45:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;383:45:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:220:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2574:220:8;-1:-1:-1;;;;;2574:220:8;;;;;;;;;;;;;;;;;;;;;;;;;641:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;641:83:8;;;;;;;;;;;;;;;;;;;;3066:458;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3066:458:8;-1:-1:-1;;;;;3066:458:8;;;;;;;;;;;;477:35:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;477:35:6;;;;;;;;;;;;;;;;;;;;;;;3975:330:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3975:330:8;-1:-1:-1;;;;;3975:330:8;;;;;;;925:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;925:98:8;-1:-1:-1;;;;;925:98:8;;;;;434:37:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;434:37:6;;;;4761:340:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4761:340:8;-1:-1:-1;;;;;4761:340:8;;;;;;;1642:316;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1642:316:8;-1:-1:-1;;;;;1642:316:8;;;;;;;1340:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1340:150:8;-1:-1:-1;;;;;1340:150:8;;;;;;;;;;575:122:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;575:122:6;;;;383:45;;;;;;;;;;;;;;;;;;;:::o;2574:220:8:-;2639:4;-1:-1:-1;;;;;2659:21:8;;;;2651:30;;;;;;2697:10;2688:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2688:29:8;;;;;;;;;;;;:37;;;2736:36;;;;;;;2688:29;;2697:10;2736:36;;;;;;;;;;;-1:-1:-1;2785:4:8;2574:220;;;;:::o;641:83::-;707:12;;641:83;:::o;3066:458::-;-1:-1:-1;;;;;3200:15:8;;3169:4;3200:15;;;;;;;;;;;3191:24;;;3183:33;;;;;;-1:-1:-1;;;;;3239:14:8;;;;;;:8;:14;;;;;;;;3254:10;3239:26;;;;;;;;3230:35;;;3222:44;;;;;;-1:-1:-1;;;;;3280:16:8;;;;3272:25;;;;;;-1:-1:-1;;;;;3322:15:8;;:9;:15;;;;;;;;;;;:26;;3342:5;3322:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;3304:15:8;;;:9;:15;;;;;;;;;;;:44;;;;3370:13;;;;;;;:24;;3388:5;3370:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;3354:13:8;;;:9;:13;;;;;;;;;;;:40;;;;3429:14;;;;;:8;:14;;;;;3444:10;3429:26;;;;;;;:37;;3460:5;3429:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3400:14:8;;;;;;;:8;:14;;;;;;;;3415:10;3400:26;;;;;;;;:66;;;;3477:25;;;;;;;;;;;3400:14;;3477:25;;;;;;;;;;;-1:-1:-1;3515:4:8;3066:458;;;;;:::o;477:35:6:-;510:2;477:35;:::o;3975:330:8:-;4075:4;-1:-1:-1;;;;;4097:21:8;;;;4089:30;;;;;;4175:10;4166:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4166:29:8;;;;;;;;;;:45;;4200:10;4166:45;:33;:45;:::i;:::-;4135:10;4126:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4126:29:8;;;;;;;;;;;;:86;;;4223:60;;;;;;4126:29;;4223:60;;;;;;;;;;;-1:-1:-1;4296:4:8;3975:330;;;;:::o;925:98::-;-1:-1:-1;;;;;1002:16:8;980:7;1002:16;;;;;;;;;;;;925:98::o;434:37:6:-;;;;;;;;;;;;;;;;;;;:::o;4761:340:8:-;4866:4;-1:-1:-1;;;;;4888:21:8;;;;4880:30;;;;;;4966:10;4957:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4957:29:8;;;;;;;;;;:50;;4991:15;4957:50;:33;:50;:::i;1642:316::-;1742:10;1703:4;1732:21;;;;;;;;;;;1723:30;;;1715:39;;;;;;-1:-1:-1;;;;;1768:16:8;;;;1760:25;;;;;;1826:10;1816:9;:21;;;;;;;;;;;:32;;1842:5;1816:32;:25;:32;:::i;:::-;1802:10;1792:9;:21;;;;;;;;;;;:56;;;;-1:-1:-1;;;;;1870:13:8;;;;;;:24;;1888:5;1870:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;1854:13:8;;:9;:13;;;;;;;;;;;;:40;;;;1905:31;;;;;;;1854:13;;1914:10;;1905:31;;;;;;;;;;-1:-1:-1;1949:4:8;1642:316;;;;:::o;1340:150::-;-1:-1:-1;;;;;1461:15:8;;;1437:7;1461:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1340:150::o;575:122:6:-;609:4;625:44;631:10;643:25;625:5;:44::i;:::-;-1:-1:-1;686:4:6;575:122;:::o;1079:131:7:-;1137:7;;1160:6;;;;1152:15;;;;;;-1:-1:-1;;1185:5:7;;;1079:131::o;1273:::-;1331:7;1358:5;;;1377:6;;;;1369:15;;;;;;1398:1;1273:131;-1:-1:-1;;;1273:131:7:o;5429:239:8:-;-1:-1:-1;;;;;5500:12:8;;;;5492:21;;;;;;5534:12;;:24;;5551:6;5534:24;:16;:24;:::i;:::-;5519:12;:39;-1:-1:-1;;;;;5585:18:8;;:9;:18;;;;;;;;;;;:30;;5608:6;5585:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;5564:18:8;;:9;:18;;;;;;;;;;;:51;;;;5626:37;;;;;;;5564:18;;:9;;5626:37;;;;;;;;;;5429:239;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\n//import \"github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\n\n// Mockup token contract built for testing the Certificate issuer.\n// Standard ERC20 implementation from OpenZeppelin\n\n// Added faucet functionality to enable testing\n\ncontract TokenMock is ERC20 {\n\n    string public constant name = \"Go Blockchain\";\n    string public constant symbol = \"GBC\";\n    uint8 public constant decimals = 18;\n\n    // self service minting, to allow for easy testing.\n    function faucet() public returns (bool) {\n        _mint(msg.sender, 1000 * uint(10)**decimals);\n        return true;\n    }\n\n}",
  "sourcePath": "/Users/polaco/Prog/goblockchain/smart-contract-certificate/contracts/TokenMock.sol",
  "ast": {
    "absolutePath": "/Users/polaco/Prog/goblockchain/smart-contract-certificate/contracts/TokenMock.sol",
    "exportedSymbols": {
      "TokenMock": [
        807
      ]
    },
    "id": 808,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 774,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 775,
        "nodeType": "ImportDirective",
        "scope": 808,
        "sourceUnit": 1405,
        "src": "25:63:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 776,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1404,
              "src": "370:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1404",
                "typeString": "contract ERC20"
              }
            },
            "id": 777,
            "nodeType": "InheritanceSpecifier",
            "src": "370:5:6"
          }
        ],
        "contractDependencies": [
          1404,
          1473
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 807,
        "linearizedBaseContracts": [
          807,
          1404,
          1473
        ],
        "name": "TokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 780,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "383:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 778,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "383:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "476f20426c6f636b636861696e",
              "id": 779,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:15:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_69e3925e24e5fec8e11c6e2a5f13bbba383f99621c4f271f7e543ce929e2b254",
                "typeString": "literal_string \"Go Blockchain\""
              },
              "value": "Go Blockchain"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 783,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "434:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 781,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "434:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "474243",
              "id": 782,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "466:5:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_7393d63877aee1c6c1d43ae0b4b70ba619a19b505d7813a1f9886ff6f913d127",
                "typeString": "literal_string \"GBC\""
              },
              "value": "GBC"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 786,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "477:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 784,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "477:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 785,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "510:2:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "615:82:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 792,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1488,
                          "src": "631:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "631:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030",
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "643:4:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "655:2:6",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                }
                              ],
                              "id": 795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "650:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint"
                            },
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "650:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 798,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 786,
                            "src": "660:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "650:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "643:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 791,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1314,
                      "src": "625:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "625:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "625:44:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "686:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 790,
                  "id": 804,
                  "nodeType": "Return",
                  "src": "679:11:6"
                }
              ]
            },
            "documentation": null,
            "id": 806,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "faucet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "590:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "609:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "608:6:6"
            },
            "scope": 807,
            "src": "575:122:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 808,
        "src": "348:352:6"
      }
    ],
    "src": "0:700:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/polaco/Prog/goblockchain/smart-contract-certificate/contracts/TokenMock.sol",
    "exportedSymbols": {
      "TokenMock": [
        807
      ]
    },
    "id": 808,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 774,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 775,
        "nodeType": "ImportDirective",
        "scope": 808,
        "sourceUnit": 1405,
        "src": "25:63:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 776,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1404,
              "src": "370:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1404",
                "typeString": "contract ERC20"
              }
            },
            "id": 777,
            "nodeType": "InheritanceSpecifier",
            "src": "370:5:6"
          }
        ],
        "contractDependencies": [
          1404,
          1473
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 807,
        "linearizedBaseContracts": [
          807,
          1404,
          1473
        ],
        "name": "TokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 780,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "383:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 778,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "383:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "476f20426c6f636b636861696e",
              "id": 779,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:15:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_69e3925e24e5fec8e11c6e2a5f13bbba383f99621c4f271f7e543ce929e2b254",
                "typeString": "literal_string \"Go Blockchain\""
              },
              "value": "Go Blockchain"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 783,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "434:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 781,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "434:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "474243",
              "id": 782,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "466:5:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_7393d63877aee1c6c1d43ae0b4b70ba619a19b505d7813a1f9886ff6f913d127",
                "typeString": "literal_string \"GBC\""
              },
              "value": "GBC"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 786,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "477:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 784,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "477:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 785,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "510:2:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "615:82:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 792,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1488,
                          "src": "631:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "631:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030",
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "643:4:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "655:2:6",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                }
                              ],
                              "id": 795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "650:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint"
                            },
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "650:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 798,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 786,
                            "src": "660:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "650:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "643:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 791,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1314,
                      "src": "625:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "625:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "625:44:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "686:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 790,
                  "id": 804,
                  "nodeType": "Return",
                  "src": "679:11:6"
                }
              ]
            },
            "documentation": null,
            "id": 806,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "faucet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "590:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "609:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "608:6:6"
            },
            "scope": 807,
            "src": "575:122:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 808,
        "src": "348:352:6"
      }
    ],
    "src": "0:700:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x7e62f110101008c87f1f22223fc5b8a5aeff4006",
      "transactionHash": "0x9e3d5f951f171faf8a00eae476e492dd6bc8f1ebd3a9ec60fcc9d21be39c444e"
    },
    "5777": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0xC4777e4a21a3525Ac750B8725cb049bb35B6899D",
      "transactionHash": "0xbb508cd250f23c0ccc890d8ffa5b49dde47ae85f6ffc30e36fe7428e46dbb164"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-12T20:26:48.036Z"
}